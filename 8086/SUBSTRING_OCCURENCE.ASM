.MODEL SMALL

.STACK 100H

.DATA
	STRING	DB 80 DUP('$'), 0H
	STRSTR	DB 40 DUP('$'), 0H
	NL	DB 0DH, 0AH, '$', 0H
	OCCURE	DB 0H
	PROMPT1	DB 'ENTER THE STRING: $', 0H
	PROMPT2	DB 'ENTER THE STRSTR: $', 0H
	PROMPT3	DB 'YES! FOUND$', 0H
	PROMPT4	DB 'NO! NOT FOUND$', 0H
.CODE
BEGIN:	MOV AX, @DATA
	MOV DS, AX

	LEA DX, PROMPT1
	MOV AH, 09H
	INT 21H

	LEA DX, STRING
	MOV AH, 0AH
	INT 21H
	LEA SI, STRING+1
	MOV CL, [SI]
	MOV CH, 0H
	MOV AL, '$'
	INC CX
	ADD SI, CX
	MOV [SI], AL	

	LEA DX, NL
	MOV AH, 09H
	INT 21H

	LEA DX, PROMPT2
	MOV AH, 09H
	INT 21H

	LEA DX, STRSTR
	MOV AH, 0AH
	INT 21H
	LEA SI, STRSTR+1
	MOV CL, [SI]
	MOV CH, 0H
	MOV AL, '$'
	INC CX
	ADD SI, CX
	MOV [SI], AL

	LEA DX, NL
	MOV AH, 09H
	INT 21H

	MOV CX, 0001H
	MOV AL, '$'
	LEA SI, STRING+2

SUBS:	LEA DI, STRSTR+2
COMP:	CMP [DI], AL
	JE INCCNT
	CMP [SI], AL
	JE DONE
	MOV BL, [SI]
	CMP BL, [DI]
	JE INCR
NEXT:	LEA SI, STRING+2
	ADD SI, CX
	INC CX
	JMP SUBS

INCR:	INC SI
	INC DI
	JMP COMP	

INCCNT:	INC OCCURE
	JMP NEXT

DONE:	CMP OCCURE, 0H
	JE FAIL

SUCC:	LEA DX, PROMPT3
	MOV AH, 09H
	INT 21H

	LEA DX, NL
	MOV AH, 09H
	INT 21H
	
	MOV AL, OCCURE
	MOV AH, 0H
	CALL DISNUM

	JMP LAST

FAIL:	LEA DX, PROMPT4
	MOV AH, 09H
	INT 21H

LAST:	MOV AH, 4CH
	INT 21H

DISNUM	PROC
	MOV BX, 10D
	MOV DX, 0000H
	MOV CX, 0000H

P1:	MOV DX, 0000H
	DIV BX
	PUSH DX
	INC CX
	CMP AX, 0H
	JNE P1

P2:	POP DX
	ADD DX, 30H
	MOV AH, 02H
	INT 21H
	LOOP P2
	RET
DISNUM	ENDP

END BEGIN
